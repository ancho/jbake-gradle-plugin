import java.text.SimpleDateFormat

Date buildTimeAndDate = new Date()
ext {
    buildDate = new SimpleDateFormat('yyyy-MM-dd').format(buildTimeAndDate)
    buildTime = new SimpleDateFormat('HH:mm:ss.SSSZ').format(buildTimeAndDate)
}

jar {
    manifest {
        attributes(
            'Built-By': System.properties['user.name'],
            'Created-By': "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})".toString(),
            'Build-Date': buildDate,
            'Build-Time': buildTime,
            'Build-Revision': versioning.info.commit,
            'Specification-Title': project.name,
            'Specification-Version': project.version,
            'Specification-Vendor': project.name,
            'Implementation-Title': project.name,
            'Implementation-Version': project.version,
            'Implementation-Vendor': project.name
        )
    }
}

def pomConfig = {
    name project.name
    description project.project_description
    url project.project_website
    inceptionYear '2014'
    licenses {
        license([:]) {
            name 'The Apache Software License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            distribution 'repo'
        }
    }
    scm {
        url project.project_vcs
    }
    developers {
        [
            melix : 'Cedric Champeau'
        ].each { devId, devName ->
            developer {
                id devId
                name devName
                roles {
                    role 'Developer'
                }
            }
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar

            pom.withXml {
                asNode().children().last() + pomConfig
                asNode().appendNode('description', project.project_description)
            }
        }
    }
}

if (!project.hasProperty('bintrayUsername')) ext.bintrayUsername = ''
if (!project.hasProperty('bintrayKey')) ext.bintrayKey = ''

bintray {
    user = bintrayUsername
    key = bintrayKey
    publications = ['mavenJava']
    pkg {
        userOrg = 'melix'
        repo = 'gradle-plugins'
        name = 'jbake-gradle-plugin'
        desc = project.project_description
        licenses = ['Apache-2.0']
        labels = ['jbake', 'site-generator']
        websiteUrl = project.project_website
        issueTrackerUrl = project.project_issues
        vcsUrl = project.project_vcs
        publicDownloadNumbers = true
        version {
            attributes = ['gradle-plugin': 'me.champeau.jbake:me.champeau.gradle:jbake-gradle-plugin ']
        }
    }
}

pluginBundle {
    website = project.project_website
    vcsUrl = project.project_vcs
    description = project.project_description
    tags = ['jbake', 'site-generator']

    plugins {
        jbakePlugin {
            id = 'me.champeau.jbake'
            displayName = 'JBake Gradle Plugin'
        }
    }

    mavenCoordinates {
        groupId = project.group
        artifactId = project.name
        version = project.version
    }
}